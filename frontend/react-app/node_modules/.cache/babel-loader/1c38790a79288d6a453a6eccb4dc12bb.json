{"ast":null,"code":"var _jsxFileName = \"/home/jackculley/VSCode/machineLearningPrac/frontend/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Urls from './Urls';\nimport Layout from './components/Layout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    store\n  } = _ref;\n  const dispatch = useDispatch(); // Similar to componentDidMount and componentDidUpdate:\n\n  React.useEffect(() => {\n    dispatch(actions.authCheckState());\n  }, [store]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Urls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} //This means that one or more of the redux actions in the form of dispatch(action) combinations are available as props\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setAuthenticatedIfRequired: () => dispatch(actions.authCheckState()),\n//     // logout: () => dispatch(actions.authLogout()) \n//   }\n// }\n\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default connect(null, null)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","Urls","Layout","connect","actions","App","store","dispatch","useEffect","authCheckState"],"sources":["/home/jackculley/VSCode/machineLearningPrac/frontend/react-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Urls from './Urls';\nimport Layout from './components/Layout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/authActions';\n\nfunction App({store}) {\n\n    const dispatch = useDispatch();\n\n    // Similar to componentDidMount and componentDidUpdate:\n    React.useEffect(() => {\n      dispatch(actions.authCheckState())\n    }, [store]);\n\n  return (\n    <div className=\"App\">\n      <Layout >\n        <Urls />\n      </Layout>\n    </div>\n  );\n}\n\n\n//This means that one or more of the redux actions in the form of dispatch(action) combinations are available as props\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setAuthenticatedIfRequired: () => dispatch(actions.authCheckState()),\n//     // logout: () => dispatch(actions.authLogout()) \n//   }\n// }\n\nexport default connect(null, null)(App);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;;AAEA,SAASC,GAAT,OAAsB;EAAA;;EAAA,IAAT;IAACC;EAAD,CAAS;EAElB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFkB,CAIlB;;EACAD,KAAK,CAACS,SAAN,CAAgB,MAAM;IACpBD,QAAQ,CAACH,OAAO,CAACK,cAAR,EAAD,CAAR;EACD,CAFD,EAEG,CAACH,KAAD,CAFH;EAIF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,MAAD;MAAA,uBACE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzBSD,G;UAEYL,W;;;KAFZK,G;AA2BT,eAAeF,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAAoBE,GAApB,CAAf"},"metadata":{},"sourceType":"module"}