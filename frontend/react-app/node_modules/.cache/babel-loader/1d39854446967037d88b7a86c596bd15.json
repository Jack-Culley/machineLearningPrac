{"ast":null,"code":"var _jsxFileName = \"/home/jackculley/VSCode/machineLearningPrac/frontend/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Urls from './Urls';\nimport Layout from './components/Layout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useSelector(state => ({\n    isAuthenticated: state.auth.token !== null && typeof state.auth.token !== 'undefined'\n  }));\n  const {\n    token\n  } = useSelector(state => ({\n    token: state.auth.token\n  })); // Similar to componentDidMount and componentDidUpdate:\n\n  React.useEffect(() => {\n    props.setAuthenticatedIfRequired();\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, { ...props,\n      children: /*#__PURE__*/_jsxDEV(Urls, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n} //This means that one or more of the redux states in the store are available as props\n\n\n_s(App, \"PetBH/RedRzbDQKn0Ff7zQTlyqg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\n\nconst mapStateToProps = state => {\n  console.log(typeof state.auth.token);\n  console.log(state.auth.token);\n  return {\n    isAuthenticated: state.auth.token !== null && typeof state.auth.token !== 'undefined',\n    token: state.auth.token\n  };\n}; //This means that one or more of the redux actions in the form of dispatch(action) combinations are available as props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthenticatedIfRequired: () => dispatch(actions.authCheckState()),\n    logout: () => dispatch(actions.authLogout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useDispatch","useSelector","Urls","Layout","connect","actions","App","props","isAuthenticated","state","auth","token","useEffect","setAuthenticatedIfRequired","mapStateToProps","console","log","mapDispatchToProps","dispatch","authCheckState","logout","authLogout"],"sources":["/home/jackculley/VSCode/machineLearningPrac/frontend/react-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Urls from './Urls';\nimport Layout from './components/Layout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/authActions';\n\n\n\nfunction App(props) {\n\n    \n\n    const { isAuthenticated } = useSelector((state) => ({ isAuthenticated: state.auth.token !== null && typeof state.auth.token !== 'undefined'}))\n    const { token } = useSelector((state) => ({ token: state.auth.token}))\n    // Similar to componentDidMount and componentDidUpdate:\n    React.useEffect(() => {\n      props.setAuthenticatedIfRequired();\n    }, [props]);\n\n  return (\n    <div className=\"App\">\n      <Layout {...props}>\n        <Urls {...props}/>\n      </Layout>\n    </div>\n  );\n}\n\n//This means that one or more of the redux states in the store are available as props\nconst mapStateToProps = (state) => {\n  console.log(typeof state.auth.token);\n  console.log(state.auth.token);\n  return {\n    isAuthenticated: state.auth.token !== null && typeof state.auth.token !== 'undefined',\n    token: state.auth.token\n  }\n}\n\n//This means that one or more of the redux actions in the form of dispatch(action) combinations are available as props\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAuthenticatedIfRequired: () => dispatch(actions.authCheckState()),\n    logout: () => dispatch(actions.authLogout()) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;;AAIA,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAAA;;EAIhB,MAAM;IAAEC;EAAF,IAAsBP,WAAW,CAAEQ,KAAD,KAAY;IAAED,eAAe,EAAEC,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB,IAArB,IAA6B,OAAOF,KAAK,CAACC,IAAN,CAAWC,KAAlB,KAA4B;EAA5E,CAAZ,CAAD,CAAvC;EACA,MAAM;IAAEA;EAAF,IAAYV,WAAW,CAAEQ,KAAD,KAAY;IAAEE,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWC;EAApB,CAAZ,CAAD,CAA7B,CALgB,CAMhB;;EACAZ,KAAK,CAACa,SAAN,CAAgB,MAAM;IACpBL,KAAK,CAACM,0BAAN;EACD,CAFD,EAEG,CAACN,KAAD,CAFH;EAIF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,MAAD,OAAYA,KAAZ;MAAA,uBACE,QAAC,IAAD,OAAUA;MAAV;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,C,CAED;;;GApBSD,G;UAIuBL,W,EACVA,W;;;KALbK,G;;AAqBT,MAAMQ,eAAe,GAAIL,KAAD,IAAW;EACjCM,OAAO,CAACC,GAAR,CAAY,OAAOP,KAAK,CAACC,IAAN,CAAWC,KAA9B;EACAI,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACC,IAAN,CAAWC,KAAvB;EACA,OAAO;IACLH,eAAe,EAAEC,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB,IAArB,IAA6B,OAAOF,KAAK,CAACC,IAAN,CAAWC,KAAlB,KAA4B,WADrE;IAELA,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWC;EAFb,CAAP;AAID,CAPD,C,CASA;;;AACA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLL,0BAA0B,EAAE,MAAMK,QAAQ,CAACb,OAAO,CAACc,cAAR,EAAD,CADrC;IAELC,MAAM,EAAE,MAAMF,QAAQ,CAACb,OAAO,CAACgB,UAAR,EAAD;EAFjB,CAAP;AAID,CALD;;AAOA,eAAejB,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf"},"metadata":{},"sourceType":"module"}